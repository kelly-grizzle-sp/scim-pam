swagger: '2.0'
info:
  title: PAM SCIM Extension
  description: |
    Privileged Access Management SCIM API extensions that promote integration with identity governance systems.
    
    The idea behind this API is to provide a common base for all PAM vendors to build on top of.  This API exposes the objects that are core to privileged account management, but can be extended by vendors that can provide additional information.  In the same way, some vendors may not support all of the endpoints or data that is described in this API.  When this is encountered, the PAM vendor can safely treat endpoints or data as optional.
    
    At a high-level, this API exposes the following concepts
    
     * User - A PAM user that is using the PAM system to manage or access privileged data.  This user can either exist only in the PAM system or can be an external user that is defined in another system (eg - Active Directory or LDAP).
     * Group - A group in the PAM system that can be used to govern access within the PAM system.  This group can either exist only in the PAM system or can be an external group that is defined in another system (eg - Active Directory or LDAP).
     * Container - A Container is a logical grouping of privileged data (credentials, etc...) that can be used for organizational or operational purposes.  Access control lists (ACLs) can be applied to a container to control which users and groups have permissions to the privileged data in the container.
     * Privileged Data - Privileged data is secret information that is protected by the PAM system (eg - a credential, an SSH key, etc...).  Privileged data MAY be stored inside of a Container, but does not have to be.  Access control lists (ACLs) can be applied to privileged data to control which users and groups have permissions to the privileged data.  More often, the ACL information is inherited from the container.
     * Access Control Lists (ACLs) - An access control list can be associated with a Container or Privileged Data.  This contains information about which users and groups have access to the Container/Data, and what rights they have.

  version: "1.0.0"
# the domain of the service
host: scim.example.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v2
produces:
  - application/scim+json
consumes:
  - application/scim+json

parameters:
  startIndex:
    name: startIndex
    in: query
    description: The 1-based index of the first query result
    required: false
    type: number
    format: integer
  count:
    name: count
    in: query
    description: The maximum number of results to return
    required: false
    type: number
    format: integer
  filter:
    name: filter
    in: query
    description: 'A SCIM filter string - see https://tools.ietf.org/html/rfc7644#section-3.4.2.2'
    required: false
    type: string
  sortBy:
    name: sortBy
    in: query
    description: The attribute whose value SHALL be used to order the returned responses.
    required: false
    type: string
  sortOrder:
    name: sortOrder
    in: query
    description: The order in which the "sortBy" parameter is applied.  Allowed values are "ascending" and "descending". Defaults to "ascending" if not specified.
    required: false
    type: string
  attributes:
    name: attributes
    in: query
    description: A comma-separated list of resource attribute names to return.
    required: false
    type: string
  excludedAttributes:
    name: excludedAttributes
    in: query
    description: A comma-separated list of resource attribute names to not return.
    required: false
    type: string

paths:
  /Users:
    get:
      summary: List or query users.
      description: |
        The Users endpoint returns information about users in the PAM system.  These may be local to the PAM system or be externally defined in another system (eg - in Active Directory or LDAP).  External users are typically a light-weight version of the user that has minimal information and rely on the external source for the details.  These will include the "urn:ietf:params:scim:schemas:pam:1.0:LinkedObject" schema to indicate the name of the source system and the user's native identifier (eg - a DN) on the source system.
      parameters:
        - $ref: '#/parameters/startIndex'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/sortBy'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Users
      responses:
        200:
          description: A ListResponse with the requested users.
          schema:
            $ref: '#/definitions/ListResponseOfUsers'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a user.
      description: Create a new local user in the PAM system.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: user
          in: body
          description: The user to create.
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Users
      responses:
        200:
          description: The newly created User.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /Users/{userId}:
    parameters:
      - name: userId
        in: path
        description: The ID of the user.
        required: true
        type: number
        format: integer
    get:
      summary: Retrieve a user.
      description: |
        This endpoint returns information about a requested user in the PAM system.  This user may be local to the PAM system or be externally defined in another system (eg - in Active Directory or LDAP).  External users are typically a light-weight version of the user that has minimal information and rely on the external source for the details.  These will include the "urn:ietf:params:scim:schemas:pam:1.0:LinkedObject" schema to indicate the name of the source system and the user's native identifier (eg - a DN) on the source system.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Users
      responses:
        200:
          description: The requested User.
          schema:
            $ref: '#/definitions/User'
          examples:
            application/scim+json:
              schemas:
                - urn:ietf:params:scim:schemas:core:2.0:User
                - urn:ietf:params:scim:schemas:pam:1.0:LinkedObject
              id: 2819c223-7f76-453a-919d-413861904646
              userName: bjensen
              name:
                formatted: Ms. Barbara J Jensen, III
                givenName: Barbara
                familyName: Jensen
                middleName: Jane
                honorificPrefix: Ms.
                honorificSuffix: III
              displayName: Babs Jensen
              emails:
                - value: bjensen@example.com
                  type: work
                  primary: true
                - value: babs@jensen.org
                  type: home
              active: true
              groups:
                - value: e9e30dba-f08f-4109-8486-d5c6a331660a
                  '$ref': https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a
                  display: Tour Guides
                  type: direct
                - value: fc348aa8-3835-40eb-a20b-c726e15c55b5
                  '$ref': https://example.com/v2/Groups/fc348aa8-3835-40eb-a20b-c726e15c55b5
                  display: Employees
                  type: indirect
              "urn:ietf:params:scim:schemas:pam:1.0:LinkedObject":
                source: Corporate Active Directory
                nativeIdentifier: cn=Barbara Jensen,ou=Users,dc=example,dc=com
              meta:
                resourceType: User
                created: 2010-01-23T04:56:22Z
                lastModified: 2011-05-13T04:42:34Z
                location: https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a user.
      description: Update a user by fully replacing it on the server with the contents of the request body.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: user
          in: body
          description: The user to update.
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Users
      responses:
        200:
          description: The updated User.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update a user.
      description: Partially update a user by modifying parts of it.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: user
          in: body
          description: The PATCH operations to execute.
          required: true
          schema:
            $ref: '#/definitions/Patch'
      tags:
        - Users
      responses:
        200:
          description: The updated User.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a user.
      description: Delete a user from the system.
      tags:
        - Users
      responses:
        204:
          description: No content
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /Groups:
    get:
      summary: List or query groups.
      description: |
        The Groups endpoint returns information about groups in the PAM system.  These may be local to the PAM system or be externally defined in another system (eg - in Active Directory or LDAP).
      parameters:
        - $ref: '#/parameters/startIndex'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/sortBy'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Groups
      responses:
        200:
          description: A ListResponse with the requested groups.
          schema:
            $ref: '#/definitions/ListResponseOfGroups'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a group.
      description: Create a new local group in the PAM system.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: group
          in: body
          description: The group to create.
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        200:
          description: The newly created Group.
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /Groups/{groupId}:
    parameters:
      - name: groupId
        in: path
        description: The ID of the group
        required: true
        type: number
        format: integer
    get:
      summary: Retrieve a group.
      description: |
        This endpoint returns information about a requested group in the PAM system.  This group may be local to the PAM system or be externally defined in another system (eg - in Active Directory or LDAP).
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Groups
      responses:
        200:
          description: The requested Group.
          schema:
            $ref: '#/definitions/Group'
          examples:
            application/scim+json:
              schemas:
                - urn:ietf:params:scim:schemas:core:2.0:Group
                - urn:ietf:params:scim:schemas:pam:1.0:LinkedObject
              id: e9e30dba-f08f-4109-8486-d5c6a331660a
              displayName: Tour Guides
              members:
                - value: 2819c223-7f76-453a-919d-413861904646
                  '$ref': https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
                  display: Babs Jensen
              "urn:ietf:params:scim:schemas:pam:1.0:LinkedObject":
                source: Corporate Active Directory
                nativeIdentifier: cn=Tour Guides,ou=Groups,dc=example,dc=com
              meta:
                resourceType: Group
                created: 2010-01-23T04:56:22Z
                lastModified: 2011-05-13T04:42:34Z
                location: https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a group.
      description: Update a group by fully replacing it on the server with the contents of the request body.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: group
          in: body
          description: The group to update.
          required: true
          schema:
            $ref: '#/definitions/Group'
      tags:
        - Groups
      responses:
        200:
          description: The updated Group.
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update a group.
      description: Partially update a group by modifying parts of it.  Prefer using PATCH over PUT when modifying group membership.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: group
          in: body
          description: The PATCH operations to execute.
          required: true
          schema:
            $ref: '#/definitions/Patch'
      tags:
        - Groups
      responses:
        200:
          description: The updated Group.
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a group.
      description: Delete a group from the system.
      tags:
        - Groups
      responses:
        204:
          description: No content
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /Containers:
    get:
      summary: List or query containers.
      description: |
        This endpoint returns information about the containers defined in the PAM system.  A Container is a logical grouping of privileged data (credentials, etc...) that can be used for organizational or operational purposes.  Access control list (ACL) information about which users and groups have permissions on a Container can be obtained through /ContainerPermissions.
      parameters:
        - $ref: '#/parameters/startIndex'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/sortBy'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Containers
      responses:
        200:
          description: A ListResponse with the requested containers.
          schema:
            $ref: '#/definitions/ListResponseOfContainers'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a container.
      description: Create a new container.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: container
          in: body
          description: The container to create.
          required: true
          schema:
            $ref: '#/definitions/Container'
      tags:
        - Containers
      responses:
        200:
          description: The newly created Container.
          schema:
            $ref: '#/definitions/Container'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /Container/{containerId}:
    parameters:
      - name: containerId
        in: path
        description: The ID of the container
        required: true
        type: number
        format: integer
    get:
      summary: Retrieve a container.
      description: |
        This endpoint returns information about a requested Container.  A Container is a logical grouping of privileged data (credentials, etc...) that can be used for organizational or operational purposes.  Access control list (ACL) information about which users and groups have permissions on a Container can be obtained through /ContainerPermissions.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Containers
      responses:
        200:
          description: The requested Container.
          schema:
            $ref: '#/definitions/Container'
          examples:
            application/scim+json:
              schemas:
                - urn:ietf:params:scim:schemas:pam:1.0:Container
              id: ab8e901-883f-4109-8486-bab810943d93e
              name: prodDBAAccounts
              displayName: Production DBA Accounts
              description: This contains all DBA accounts for the production environment.
              type: safe
              owner:
                value: 2819c223-7f76-453a-919d-413861904646
                '$ref': https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
                display: Babs Jensen
              privilegedData:
                - value: d973b5-8834f-1784-8734-caf833e9b3efa
                  '$ref': https://example.com/v2/Containers/d973b5-8834f-1784-8734-caf833e9b3efa
                  display: root @ Oracle Financials Warehouse
                - value: d249e9-92759-7883-88723-fa390734beba
                  '$ref': https://example.com/v2/Containers/d249e9-92759-7883-88723-fa390734beba
                  display: root @ Enterprise Purchase Ordering
              meta:
                resourceType: Container
                created: 2010-01-23T04:56:22Z
                lastModified: 2011-05-13T04:42:34Z
                location: https://example.com/v2/Container/ab8e901-883f-4109-8486-bab810943d93e
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a container.
      description: Update a container by fully replacing it on the server with the contents of the request body.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: container
          in: body
          description: The user to container.
          required: true
          schema:
            $ref: '#/definitions/Container'
      tags:
        - Containers
      responses:
        200:
          description: The updated Container.
          schema:
            $ref: '#/definitions/Container'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update a container.
      description: Partially update a container by modifying parts of it.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: container
          in: body
          description: The PATCH operations to execute.
          required: true
          schema:
            $ref: '#/definitions/Patch'
      tags:
        - Containers
      responses:
        200:
          description: The updated Container.
          schema:
            $ref: '#/definitions/Container'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a container.
      description: Delete a container from the system.
      tags:
        - Containers
      responses:
        204:
          description: No content
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /PrivilegedData:
    get:
      summary: List or query privileged data.
      description: |
        This endpoint returns information about the privileged data defined in the PAM system.  Privileged data is secret information that is protected by the PAM system (eg - a credential, an SSH key, etc...).  Privileged data MAY be stored inside of a Container, but does not have to be.  Access control list (ACL) information about which users and groups have permissions on a piece of PrivilegedData can be obtained through /PrivilegedDataPermissions.
      parameters:
        - $ref: '#/parameters/startIndex'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/sortBy'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Privileged Data
      responses:
        200:
          description: A ListResponse with the requested privileged data.
          schema:
            $ref: '#/definitions/ListResponseOfPrivilegedData'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a privileged data.
      description: Create a new privileged data.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: privilegedData
          in: body
          description: The PrivilegedData to create.
          required: true
          schema:
            $ref: '#/definitions/PrivilegedData'
      tags:
        - Privileged Data
      responses:
        200:
          description: The newly created PrivilegedData.
          schema:
            $ref: '#/definitions/PrivilegedData'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /PrivilegedData/{privilegedDataId}:
    parameters:
      - name: privilegedDataId
        in: path
        description: The ID of the PrivilegedData
        required: true
        type: number
        format: integer
    get:
      summary: Retrieve a single PrivilegedData.
      description: |
        This endpoint returns information about a requested piece of PrivilegedData.  Privileged data is secret information that is protected by the PAM system (eg - a credential, an SSH key, etc...).  Privileged data MAY be stored inside of a Container, but does not have to be.  Access control list (ACL) information about which users and groups have permissions on a piece of PrivilegedData can be obtained through /PrivilegedDataPermissions.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Privileged Data
      responses:
        200:
          description: The requested PrivilegedData.
          schema:
            $ref: '#/definitions/PrivilegedData'
          examples:
            application/scim+json:
              schemas:
                - urn:ietf:params:scim:schemas:pam:1.0:PrivilegedData
              id: d973b5-8834f-1784-8734-caf833e9b3efa
              name: root @ Oracle Financials Warehouse
              description: Full access to the Oracle Financials Warehouse database.
              type: credential
              meta:
                resourceType: PrivilegedData
                created: 2010-01-23T04:56:22Z
                lastModified: 2011-05-13T04:42:34Z
                location: https://example.com/v2/PrivilegedData/d973b5-8834f-1784-8734-caf833e9b3efa
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a privileged data.
      description: Update a privileged data by fully replacing it on the server with the contents of the request body.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: privilegedData
          in: body
          description: The privileged data to update.
          required: true
          schema:
            $ref: '#/definitions/PrivilegedData'
      tags:
        - Privileged Data
      responses:
        200:
          description: The updated PrivilegedData.
          schema:
            $ref: '#/definitions/PrivilegedData'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update a privileged data.
      description: Partially update a privileged data by modifying parts of it.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: privilegedData
          in: body
          description: The PATCH operations to execute.
          required: true
          schema:
            $ref: '#/definitions/Patch'
      tags:
        - Privileged Data
      responses:
        200:
          description: The updated PrivilegedData.
          schema:
            $ref: '#/definitions/PrivilegedData'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a privileged data.
      description: Delete a privileged data from the system.
      tags:
        - Privileged Data
      responses:
        204:
          description: No content
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /ContainerPermissions:
    get:
      summary: List or query container permissions.
      description: |
        This endpoint allows listing ACL information that is attached to containers.
      parameters:
        - $ref: '#/parameters/startIndex'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/sortBy'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Access Control Lists
      responses:
        200:
          description: A ListResponse with the requested ContainerPermissions.
          schema:
            $ref: '#/definitions/ListResponseOfContainerPermissions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add permissions to a user on a container.
      description: Add permissions to a user on a container.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: containerPermission
          in: body
          description: The container permission to create.
          required: true
          schema:
            $ref: '#/definitions/ContainerPermission'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The newly created ContainerPermission.
          schema:
            $ref: '#/definitions/ContainerPermission'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /ContainerPermissions/{containerPermissionId}:
    parameters:
      - name: containerPermissionId
        in: path
        description: The ID of the ContainerPermission
        required: true
        type: number
        format: integer
    get:
      summary: Retrieve a single ContainerPermission.
      description: |
        This endpoint allows retrieving ACL information that is attached to a container.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The requested ContainerPermission.
          schema:
            $ref: '#/definitions/ContainerPermission'
          examples:
            application/scim+json:
              schemas:
                - urn:ietf:params:scim:schemas:pam:1.0:ContainerPermission
              id: c387432-78823-87234-7832-93c9ae93745e
              container:
                value: ab8e901-883f-4109-8486-bab810943d93e
                '$ref': https://example.com/v2/Containers/ab8e901-883f-4109-8486-bab810943d93e
                display: Production DBA Accounts
              user:
                value: 2819c223-7f76-453a-919d-413861904646
                '$ref': https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
                display: Babs Jensen
              rights:
                - Connect
                - List Accounts
                - View Password
              meta:
                resourceType: ContainerPermission
                created: 2010-01-23T04:56:22Z
                lastModified: 2011-05-13T04:42:34Z
                location: https://example.com/v2/ContainerPermissions/c387432-78823-87234-7832-93c9ae93745e
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a container permission.
      description: Update a container permission by fully replacing it on the server with the contents of the request body.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: containerPermission
          in: body
          description: The container permission to update.
          required: true
          schema:
            $ref: '#/definitions/ContainerPermission'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The updated ContainerPermission.
          schema:
            $ref: '#/definitions/ContainerPermission'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update a container permission.
      description: Partially update a container permission by modifying parts of it.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: containerPermission
          in: body
          description: The PATCH operations to execute.
          required: true
          schema:
            $ref: '#/definitions/Patch'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The updated ContainerPermission.
          schema:
            $ref: '#/definitions/ContainerPermission'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a container permission.
      description: Delete a container permission from the system.
      tags:
        - Access Control Lists
      responses:
        204:
          description: No content
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /PrivilegedDataPermissions:
    get:
      summary: List or query privileged data permissions.
      description: |
        This endpoint allows listing ACL information that is attached to privileged data.
      parameters:
        - $ref: '#/parameters/startIndex'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/sortBy'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Access Control Lists
      responses:
        200:
          description: A ListResponse with the requested PrivilegedDataPermissions.
          schema:
            $ref: '#/definitions/ListResponseOfPrivilegedDataPermissions'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add permissions to a user on a privileged data.
      description: Add permissions to a user on a privileged data.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: privilegedDataPermission
          in: body
          description: The privileged data permission to create.
          required: true
          schema:
            $ref: '#/definitions/PrivilegedDataPermission'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The newly created PrivilegedDataPermission.
          schema:
            $ref: '#/definitions/PrivilegedDataPermission'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /PrivilegedDataPermissions/{privilegedDataPermissionId}:
    parameters:
      - name: privilegedDataPermissionId
        in: path
        description: The ID of the PrivilegedDataPermission to retrieve
        required: true
        type: number
        format: integer
    get:
      summary: Retrieve a single ContainerPermission.
      description: |
        This endpoint allows retrieving ACL information that is attached to privileged data.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The requested PrivilegedDataPermission.
          schema:
            $ref: '#/definitions/PrivilegedDataPermission'
          examples:
            application/scim+json:
              schemas:
                - urn:ietf:params:scim:schemas:pam:1.0:PrivilegedDataPermission
              id: f823414-872344-77381-ab93489d83ea87
              privilegedData:
                value: d973b5-8834f-1784-8734-caf833e9b3efa
                '$ref': https://example.com/v2/PrivilegedData/d973b5-8834f-1784-8734-caf833e9b3efa
                display: root @ Oracle Financials Warehouse
              group:
                value: e9e30dba-f08f-4109-8486-d5c6a331660a
                '$ref': https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a
                display: Tour Guides
              rights:
                - Connect
                - View Password
              meta:
                resourceType: PrivilegedDataPermission
                created: 2010-01-23T04:56:22Z
                lastModified: 2011-05-13T04:42:34Z
                location: https://example.com/v2/PrivilegedDataPermissions/f823414-872344-77381-ab93489d83ea87
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a privileged data permission.
      description: Update a privileged data permission by fully replacing it on the server with the contents of the request body.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: privilegedDataPermission
          in: body
          description: The privileged data permission to update.
          required: true
          schema:
            $ref: '#/definitions/PrivilegedDataPermission'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The updated PrivilegedDataPermission.
          schema:
            $ref: '#/definitions/PrivilegedDataPermission'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Partially update a privileged data permission.
      description: Partially update a privileged data permission by modifying parts of it.
      parameters:
        - $ref: '#/parameters/attributes'
        - $ref: '#/parameters/excludedAttributes'
        - name: privilegedDataPermission
          in: body
          description: The PATCH operations to execute.
          required: true
          schema:
            $ref: '#/definitions/Patch'
      tags:
        - Access Control Lists
      responses:
        200:
          description: The updated PrivilegedDataPermission.
          schema:
            $ref: '#/definitions/PrivilegedDataPermission'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a privileged data permission.
      description: Delete a privileged data permission from the system.
      tags:
        - Access Control Lists
      responses:
        204:
          description: No content
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  ListResponseOfUsers:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results in the list.  This may be greater than itemsPerPage.
      startIndex:
        type: integer
        description: The 1-based index of the first query result.
      itemsPerPage:
        type: integer
        description: The maximum number of results to return.
      Resources:
        type: array
        items:
          $ref: '#/definitions/User'

  User:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier of the user.
      userName:
        type: string
        description: A service provider's unique identifier for the user, typically used by the user to directly authenticate to the service provider.
      name:
        type: object
        description: The components of the user's name.
        properties:
          formatted:
            type: string
            description: The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.
          familyName:
            type: string
            description: The family name of the User, or last name in most Western languages
          givenName:
            type: string
            description: The given name of the User, or first name in most Western languages
          middleName:
            type: string
            description: The middle name(s) of the User
          honorificPrefix:
            type: string
            description: The honorific prefix(es) of the User, or title in most Western languages
          honorificSuffix:
            type: string
            description: The honorific suffix(es) of the User, or suffix in most Western languages
      displayName:
        type: string
        description: The name of the user, suitable for display to end-users.
      nickName:
        type: string
        description: The casual way to address the user in real life.
      profileUrl:
        type: string
        description: A URI that points to a location representing the user's online profile (e.g., a web page).
      title:
        type: string
        description: The user's title, such as "Vice President".
      userType:
        type: string
        description: Used to identify the relationship between the organization and the user.
      preferredLanguage:
        type: string
        description: Indicates the user's preferred written or spoken languages and is generally used for selecting a localized user interface.
      locale:
        type: string
        description: Used to indicate the User's default location for purposes of localizing such items as currency, date time format, or numerical representations.
      timezone:
        type: string
        description: The User's time zone, in IANA Time Zone database format.
      active:
        type: boolean
        description: A Boolean value indicating the user's administrative status.
      password:
        type: string
        description: This attribute is intended to be used as a means to set, replace, or compare (i.e., filter for equality) a password.  The cleartext value or the hashed value of a password SHALL NOT be returnable by a service provider.
      emails:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              description: The email address
            type:
              type: string
              description: The type of email address (eg - home, work, etc...)
            primary:
              type: boolean
              description: A boolean indicating that this is the primary address to use for email communication
      phoneNumbers:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              description: The phone number
            type:
              type: string
              description: The type of phone number (eg - home, work, etc...)
            primary:
              type: boolean
              description: A boolean indicating that this is the primary phone number to use for phone communication
      ims:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              description: Instant messaging address for the user.
            type:
              type: string
              description: The type of instant messager (eg - "aim", "gtalk", "icq", "xmpp", "msn", "skype", "qq", "yahoo", or "other")
            primary:
              type: boolean
              description: A boolean indicating that this is the primary IM to use
      photos:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              description: A URI that points to a resource location representing the user's image.
            type:
              type: string
              description: The size of photo (eg - photo or thumbnail)
            primary:
              type: boolean
              description: A boolean indicating that this is the primary photo to use
      addresses:
        type: array
        items:
          type: object
          properties:
            formatted:
              type: string
              description: The full mailing address, formatted for display or use with a mailing label.
            streetAddress:
              type: string
              description: The full street address component.
            locality:
              type: string
              description: The city or locality component.
            region:
              type: string
              description: The state or region component.
            postalCode:
              type: string
              description: The zip code or postal code component.
            country:
              type: string
              description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format
            type:
              type: string
              description: The type of address (eg - work, home, etc...)
            primary:
              type: boolean
              description: A boolean indicating that this is the primary address to use
      groups:
        type: array
        description: A list of groups to which the user belongs, either through direct membership, through nested groups, or dynamically calculated.  This attribute is read-only.  Group membership MUST be modified by adding / removing the user to / from the group.
        items:
          type: object
          properties:
            value:
              type: string
              description: The ID of the group
            '$ref':
              type: string
              description: A URI reference to the group
            display:
              type: string
              description: The display name of the group
            'type':
              type: string
              description: The method that the group membership was acquired. Either 'direct' or 'indirect' depending on whether the group is inherited or not.
      entitlements:
        type: array
        description: A list of entitlements for the user that represent a thing the user has.  No vocabulary or syntax is specified; service providers and clients are expected to encode sufficient information in the value so as to accurately and without ambiguity determine what the user has access to.
        items:
          type: object
          properties:
            value:
              type: string
              description: The entitlement
            'type':
              type: string
              description: The type of entitlement
      roles:
        type: array
        description: A list of roles for the user that collectively represent who the user is, e.g., "Student", "Faculty".
        items:
          type: object
          properties:
            value:
              type: string
              description: The role
            'type':
              type: string
              description: The type of role
      x509Certificates:
        type: array
        description: A list of certificates associated with the resource (e.g., a User).  Each value contains exactly one DER-encoded X.509 certificate (see Section 4 of [RFC5280]), which MUST be base64 encoded per Section 4 of [RFC4648].
        items:
          type: string
          properties:
            value:
              type: string
              description: The certificate
      'urn:ietf:params:scim:schemas:pam:1.0:LinkedObject':
        type: object
        properties:
          source:
            type: string
            description: The name of the external application on which this user lives.  If this is a PAM local user, this is null.
          nativeIdentifier:
            type: string
            description: The native identifier of the user on the external application (eg - the LDAP DN).  If this is a PAM local user, this is null.

  ListResponseOfGroups:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results in the list.  This may be greater than itemsPerPage.
      startIndex:
        type: integer
        description: The 1-based index of the first query result.
      itemsPerPage:
        type: integer
        description: The maximum number of results to return.
      Resources:
        type: array
        items:
          $ref: '#/definitions/Group'

  Group:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier of the group.
      displayName:
        type: string
        description: A human-readable name for the Group.
      members:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              description: The ID of the user or group that is a member of this group.
            '$ref':
              type: string
              description: A URI that references the user or group that is a member of this group.
            display:
              type: string
              description: The display name of the user or group that is a member of this group.
      'urn:ietf:params:scim:schemas:pam:1.0:LinkedObject':
        type: object
        properties:
          source:
            type: string
            description: The name of the external application on which this group lives.  If this is a PAM local group, this is null.
          nativeIdentifier:
            type: string
            description: The native identifier of the group on the external application (eg - the LDAP DN).  If this is a PAM local group, this is null.

  ListResponseOfContainers:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results in the list.  This may be greater than itemsPerPage.
      startIndex:
        type: integer
        description: The 1-based index of the first query result.
      itemsPerPage:
        type: integer
        description: The maximum number of results to return.
      Resources:
        type: array
        items:
          $ref: '#/definitions/Container'

  Container:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier of the container.
      name:
        type: string
        description: The name of the container.
      displayName:
        type: string
        description: The display name of the container.  This is optional.  If null, the name will be used as the display name.
      description:
        type: string
        description: The description of the container.
      type:
        type: string
        description: The type of container (eg - management set or account store).  This is optional if the PAM system does not support multiple types of containers.
      parent:
        type: object
        description: A complex attribute that defines the parent Container of this Container if the service provider supports hierarchies of containers. The following sub-attributes are defined.
        properties:
          value:
            type: string
            description: The ID of the Container that is the parent of this Container in the hierarchy.
          '$ref':
            type: string
            description: A URI reference to the Container that is the parent of this Container in the hierarchy.
          display:
            type: string
            description: The display name of the Container that is the parent of this Container in the hierarchy.
      owner:
        type: object
        description: The user that owns this container.
        properties:
          value:
            type: string
            description: The ID of the user that owns this container
          '$ref':
            type: string
            description: A URI reference to the user that owns this container.
          display:
            type: string
            description: The display name of the user that owns this container
      privilegedData:
        type: array
        description: The privileged data that resides in this container.
        items:
          $ref: '#/definitions/PrivilegedDataReference'

  PrivilegedDataReference:
    type: object
    properties:
      value:
        type: string
        description: The ID of the privileged data.
      '$ref':
        type: string
        description: A URI reference to the PrivilegedData.
      display:
        type: string
        description: The displayable value of the PrivilegedData.
      type:
        type: string
        description: The type of the privileged data.

  ListResponseOfPrivilegedData:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results in the list.  This may be greater than itemsPerPage.
      startIndex:
        type: integer
        description: The 1-based index of the first query result.
      itemsPerPage:
        type: integer
        description: The maximum number of results to return.
      Resources:
        type: array
        items:
          $ref: '#/definitions/PrivilegedData'

  PrivilegedData:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier of the PrivilegedData.
      name:
        type: string
        description: A descriptive name for this piece of PrivilegedData.  For example, root@mylinuxhost
      description:
        type: string
        description: A description for this piece of PrivilegedData.
      type:
        type: string
        description: The type of PrivilegedData.  The value will be dependent on what is supported by the PAM system.  Examples include 'credential', 'ssh key', 'file', etc...

  ListResponseOfContainerPermissions:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results in the list.  This may be greater than itemsPerPage.
      startIndex:
        type: integer
        description: The 1-based index of the first query result.
      itemsPerPage:
        type: integer
        description: The maximum number of results to return.
      Resources:
        type: array
        items:
          $ref: '#/definitions/ContainerPermission'

  ContainerPermission:
    properties:
      id:
        type: string
        description: The unique identifier of the ContainerPermission.
      container:
        type: object
        description: The container that these permissions apply to.  This is required.
        properties:
          value:
            type: string
            description: The ID of the container that these permissions apply to.
          '$ref':
            type: string
            description: A URI reference to the container that these permissions apply to.
          name:
            type: string
            description: The name of the Container these permissions apply to.
          display:
            type: string
            description: The display name of the Container that these permissions apply to.
      user:
        type: object
        description: The User that these permissions apply to.  Either this or group is required.
        properties:
          value:
            type: string
            description: The ID of the user that these permissions apply to.
          '$ref':
            type: string
            description: A URI reference to the user that these permissions apply to.
          display:
            type: string
            description: The display name of the User that these permissions apply to.
      group:
        type: object
        description: The Group that these permissions apply to.  Either this or user is required.
        properties:
          value:
            type: string
            description: The ID of the group that these permissions apply to.
          '$ref':
            type: string
            description: A URI reference to the group that these permissions apply to.
          display:
            type: string
            description: The display name of the Group that these permissions apply to.
      rights:
        type: array
        description: The rights that the user or group has on this container.
        items:
          type: string

  ListResponseOfPrivilegedDataPermissions:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results in the list.  This may be greater than itemsPerPage.
      startIndex:
        type: integer
        description: The 1-based index of the first query result.
      itemsPerPage:
        type: integer
        description: The maximum number of results to return.
      Resources:
        type: array
        items:
          $ref: '#/definitions/PrivilegedDataPermission'

  PrivilegedDataPermission:
    properties:
      id:
        type: string
        description: The unique identifier of the PrivilegedDataPermission.
      privilegedData:
        type: object
        description: The privileged data that these permissions apply to.  This is required.
        properties:
          value:
            type: string
            description: The ID of the PrivilegedData that these permissions apply to.
          '$ref':
            type: string
            description: A URI reference to the PrivilegedData that these permissions apply to.
          display:
            type: string
            description: The display name of the PrivilegedData that these permissions apply to.
      user:
        type: object
        description: The User that these permissions apply to.  Either this or group is required.
        properties:
          value:
            type: string
            description: The ID of the user that these permissions apply to.
          '$ref':
            type: string
            description: A URI reference to the user that these permissions apply to.
          display:
            type: string
            description: The display name of the User that these permissions apply to.
      group:
        type: object
        description: The Group that these permissions apply to.  Either this or user is required.
        properties:
          value:
            type: string
            description: The ID of the group that these permissions apply to.
          '$ref':
            type: string
            description: A URI reference to the group that these permissions apply to.
          display:
            type: string
            description: The display name of the Group that these permissions apply to.
      rights:
        type: array
        description: The rights that the user or group has on this privileged data.
        items:
          type: string

  Patch:
    type: object
    properties:
      Operations:
        type: array
        items:
          type: object
          properties:
            op:
              type: string
              description: The operation to perform - either "add", "remove", or "replace".
            path:
              type: string
              description: A String containing an attribute path describing the target of the operation.  The "path" attribute is OPTIONAL for "add" and "replace" and is REQUIRED for "remove" operations.
            value:
              type: object
              description: An object with key/value pairs of attributes and values to be added or replaced.

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
